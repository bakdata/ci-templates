name: "Push Docker image"
description: "Push Docker image to any host"
inputs:
    docker-registry:
        description: "Host where the image should be pushed to."
        required: false
        default: ""
    image-namespace:
        description: "Namespace of Docker image."
        required: false
        default: ""
    image-name:
        description: "Name of Docker image."
        required: false
        default: "${{ github.event.repository.name }}"
    image-tag:
        description: "Tag of Docker image."
        required: false
        default: "pipeline-${{ github.run_id }}-git-${GITHUB_SHA::8}"
    working-directory:
        description: "Working directory for your Docker artifacts."
        required: false
        default: "."
runs:
    using: "composite"
    steps:
        # setup-buildx action will create and boot a builder using by default the docker-container driver.
        # This is not required but recommended using it to be able to build multi-platform images, export cache, etc.
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2.2.1
        - name: Set image name and tag
          run: |
            fullImageName="${{ inputs.image-name }}"
            if [[ -n "${{ inputs.image-namespace }}" ]]; then
              fullImageName="${{ inputs.image-namespace }}/${fullImageName}"
            fi
            if [[ -n "${{ inputs.docker-registry }}" ]]; then
              fullImageName="${{ inputs.docker-registry }}/${fullImageName}"
            fi

            if [[ "$GITHUB_REF" =~ ^refs/tags/.* ]]; then
              docker tag ${{ inputs.image-name }} ${fullImageName}:latest
              docker tag ${{ inputs.image-name }} ${fullImageName}:${GITHUB_REF/refs\/tags\//}
              docker push ${fullImageName}:latest
              docker push ${fullImageName}:${GITHUB_REF/refs\/tags\//}
            else
              docker tag ${{ inputs.image-name }} ${fullImageName}:${{ inputs.image-tag }}
              docker push ${fullImageName}:${{ inputs.image-tag }}
            fi
          shell: bash
          working-directory: ${{ inputs.working-directory }}
