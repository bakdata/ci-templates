name: "Build Java artifacts"
description: "Build Java artifacts using gradle"

inputs:
  github-token:
    description: "The token for github access."
    required: true
  sonar-token:
    description: "The token for sonarcloud."
    required: true
  signing-secret-key-ring-file:
    description: "The key ring file for signing the sonatype publication."
    required: true
  signing-key-id:
    description: "The key id for signing the sonatype publication."
    required: true
  signing-password:
    description: "The password for signing the sonatype publication."
    required: true
  java-distribution:
    description: "The java distribution to be installed. (Default is temurin)"
    required: false
    default: "temurin"
  java-version:
    description: "The java version to be installed. (Default is 11)"
    required: false
    default: "11"
  gradle-version:
    description: "The gradle version to be installed. (Default is 6.7.1)"
    required: false
    default: "6.7.1"
  gradle-cache:
    description: "The gradle cache to use. Options are gradle, maven, sbt. (Default is gradle)"
    required: false
    default: "gradle"
  integration-tests:
    description: "If true, the action is executing integration tests (Default is true)"
    required: false
    default: true
  docker:
    description: "If true, the action is building a docker image with jib (Default is false)"
    required: false
    default: false
  working-directory:
    description: "The working directory of your Gradle artifacts. (Default is root directory)"
    required: false
    default: "./"
runs:
  using: "composite"
  steps:
    # - name: Set up Gradle with version ${{ inputs.gradle-version }}
    #   uses: bakdata/ci-templates/actions/java-gradle-setup@feature/java-gradle
    #   with:
    #     java-distribution: ${{ inputs.java-distribution }}
    #     java-version: ${{ inputs.java-version }}
    #     gradle-version: ${{ inputs.gradle-version }}
    #     gradle-cache: ${{ inputs.gradle-cache }}

    # - name: Compile
    #   run: ./gradlew --info assemble
    #   shell: bash
    #   working-directory: ${{ inputs.working-directory }}
    
    # - name: Run unit tests
    #   run: ./gradlew check --info -PexcludeTests="**/*IntegrationTest*"
    #   shell: bash
    #   working-directory: ${{ inputs.working-directory }}
    
    # - name: Run integration tests
    #   if: ${{ inputs.integration-tests  == 'true' }}
    #   run: ./gradlew check --info -PincludeTests="**/*IntegrationTest*"
    #   shell: bash
    #   working-directory: ${{ inputs.working-directory }}
    
    # - name: Build Docker image
    #   if: ${{ inputs.docker  == 'true' }}
    #   run: ./gradlew --info jibBuildTar --image=${{ github.event.repository.name }}:${{ github.run_id }} -x test
    #   shell: bash
    #   working-directory: ${{ inputs.working-directory }}

    - name: Git Status
      run: git status
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    
    - name: Assess code quality
      run: ./gradlew -Dsonar.branch.name=main -Dsonar.projectKey=github-playground -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=bakdata --info --stacktrace sonarqube
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        #GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}

    # - name: Check if everything builds (incl. javadoc) for snapshot/release and signing works
    #   run: ./gradlew --info --stacktrace signSonatypePublication
    #   shell: bash
    #   working-directory: ${{ inputs.working-directory }}
    #   env:
    #     SIGNING_SECRET_KEY_RING_FILE: ${{ inputs.signing-secret-key-ring-file }}
    #     SIGNING_KEY_ID: ${{ inputs.signing-key-id }}
    #     SIGNING_PASSWORD: ${{ inputs.signing-password }}
