name: "Test Java artiacts"
description: "Run Junit test and publish test results"

inputs:
  download-lfs-files:
    description: "Whether the Git checkout action should resolve LFS files or not. (Default is false)"
    required: false
    default: false
  gradle-cache:
    description: "Whether Gradle caching is enabled or not. (Default is true)"
    required: false
    default: true
  gradle-cache-read-only:
    description: "Whether Gradle caching should be read-only. By default this value is 'false' for workflows on the GitHub default branch and 'true' for workflows on other branches."
    required: false
    default: ${{ github.event.repository != null && github.ref_name != github.event.repository.default_branch }}
  gradle-refresh-dependencies:
    description: "Whether Gradle should refresh dependencies. (Default is false)"
    required: false
    default: "false"
  gradle-version:
    description: "Gradle version to be installed. (Default is wrapper)"
    required: false
    default: "wrapper"
  java-distribution:
    description: "Java distribution to be installed. (Default is microsoft)"
    required: false
    default: "microsoft"
  java-version:
    description: "Java version to be installed. (Default is 11)"
    required: false
    default: "11"
  working-directory:
    description: "Working directory of your Gradle artifacts. (Default is .)"
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: bakdata/ci-templates/actions/checkout@ft/nodejs-action-update
      with:
        lfs: ${{ inputs.download-lfs-files }}

    - name: Set up Gradle with version ${{ inputs.gradle-version }}
      uses: bakdata/ci-templates/actions/java-gradle-setup@ft/nodejs-action-update
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        gradle-version: ${{ inputs.gradle-version }}
        gradle-cache: ${{ inputs.gradle-cache }}
        gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}

    - name: Run tests
      run: ./gradlew check --info --stacktrace ${{ inputs.gradle-refresh-dependencies == 'true' && '--refresh-dependencies' || '' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Report test results
      uses: mikepenz/action-junit-report@v5
      if: always() # always run even if the previous step fails
      with:
        report_paths: "**/build/test-results/test/TEST-*.xml"
