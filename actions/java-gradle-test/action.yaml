name: "Test Java artiacts"
description: "Run Junit test, publish test results and optionally test signing for Sonatype"

inputs:
  sonar-token:
    description: "Token for Sonarcloud."
    required: false
  sonar-organization:
    description: "Organization for Sonarcloud."
    required: false
  signing-secret-key-ring:
    description: "Key ring (base64 encoded) for signing the Sonatype publication."
    required: false
  signing-key-id:
    description: "Key id for signing the Sonatype publication."
    required: false
  signing-password:
    description: "Password for signing the Sonatype publication."
    required: false
  java-distribution:
    description: "Java distribution to be installed. (Default is microsoft)"
    required: false
    default: "microsoft"
  java-version:
    description: "Java version to be installed. (Default is 11)"
    required: false
    default: "11"
  gradle-version:
    description: "Gradle version to be installed. (Default is wrapper)"
    required: false
    default: "wrapper"
  gradle-cache:
    description: "Whether Gradle caching is enabled or not. (Default is true)"
    required: false
    default: true
  working-directory:
    description: "Working directory of your Gradle artifacts. (Default is .)"
    required: false
    default: "."
  download-lfs-files:
    description: "Whether the Git checkout action should resolve LFS files or not. (Default is false)"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: bakdata/ci-templates/actions/checkout@v1.26.0
      with:
        fetch-depth: 0
        lfs: ${{ inputs.download-lfs-files }}

    - name: Set up Gradle with version ${{ inputs.gradle-version }}
      uses: bakdata/ci-templates/actions/java-gradle-setup@v1.16.0
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        gradle-version: ${{ inputs.gradle-version }}
        gradle-cache: ${{ inputs.gradle-cache }}

    - name: Run tests
      run: ./gradlew check --info --stacktrace
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Report test results
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: "**/build/test-results/test/TEST-*.xml"

    # sonar.branch.autoconfig.disabled is necessary for autocreation of projects on Sonarcloud to work
    - name: Assess code quality
      if: ${{ inputs.sonar-token != '' && inputs.sonar-organization != '' }}
      run: ./gradlew -Dsonar.branch.autoconfig.disabled=true -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=${{ inputs.sonar-organization }} --info --stacktrace sonarqube
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}

    - name: Check if everything builds (incl. javadoc) for snapshot/release and signing works
      if: ${{ inputs.signing-secret-key-ring != '' && inputs.signing-key-id != '' && inputs.signing-password != '' }}
      run: |
        export SIGNING_SECRET_KEY_RING_FILE="$(mktemp -d)/secring.gpg"
        echo '${{ inputs.signing-secret-key-ring }}' | base64 -d > $SIGNING_SECRET_KEY_RING_FILE
        ./gradlew --info --stacktrace signSonatypePublication
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        SIGNING_KEY_ID: ${{ inputs.signing-key-id }}
        SIGNING_PASSWORD: ${{ inputs.signing-password }}
        CI: true
