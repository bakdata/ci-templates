name: "Deploy helm chart"
description: "Deploy a helm chart to the GKE cluster"
inputs:
  gke-service-account-key:
    description: "GKE service account key for authentication"
    required: true
  gke-project-id:
    description: "GKE project id for authentication"
    required: true
  gke-region:
    description: "GKE region for authentication"
    required: true
  gke-cluster:
    description: "GKE cluster for authentication"
    required: true
  chart:
    description: "Helm chart to deploy"
    required: true
  chart-version:
    description: "Chart Version"
    required: true
  release-name:
    description: "Helm release name"
    required: true
  namespace:
    description: "K8s namespace to deploy in"
    required: true
  values-yaml:
    description: "Location of helm's value file"
    required: true
  repository-name:
    description: "Helm repository name"
    required: false
  repository-url:
    description: "Url of the repository"
    required: false
  gcloud-sdk-version:
    description: "GCloud SDK version for authentication"
    default: "376.0.0"
    required: false
  kubectl-version:
    description: "Kubectl version"
    default: "v1.23.0"
    required: false
  helm-version:
    description: "Helm version"
    default: "v3.8.1"
    required: false 
runs:
  using: "composite"
  steps:
    - name: Setup environment
      uses: uses: bakdata/ci-templates/actions/helm-setup@v1.0.0
      with:
        gke-service-account-key: ${{ inputs.gke-service-account-key }}
        gke-project-id: ${{ inputs.gke-project-id }}
        gke-region: ${{ inputs.gke-region }}
        gke-cluster: ${{ inputs.gke-cluster }}
        gcloud-sdk-version: ${{ inputs.gcloud-sdk-version }}
        kubectl-version: ${{ inputs.kubectl-version }}
        helm-version: ${{ inputs.helm-version }}

    - name: Add helm repository
      shell: bash
      run: |
        if [ -n "$REPOSITORY_NAME" ] && [ -n "$REPOSITORY_URL" ]
        then
          helm repo add "$REPOSITORY_NAME" "$REPOSITORY_URL"
          helm repo update
        else
          echo "No repository specified; Skipping step"
        fi
      env:
        REPOSITORY_NAME: ${{ inputs.repository-name }}
        REPOSITORY_URL: ${{ inputs.repository-url }}

    - name: Deploy helm chart
      shell: bash
      run: |
        helm upgrade --debug --install --wait --timeout 1200s --force \
          --version ${{ inputs.chart-version }} \
          --values ${{ inputs.values-yaml }} \
          --namespace ${{ inputs.namespace }} \
          ${{ inputs.release-name }} ${{ inputs.chart }}
