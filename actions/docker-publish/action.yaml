name: "Publish Docker image"
description: "Publish Docker image from download artifact"

inputs:
  image-name:
    descritption: "Name of Docker image (Default is the respository name)."
    required: true
    default: ${{ github.event.repository.name }}
  image-artifact-name:
    descritption: "Name of the pipeline artifact that contains the Docker image.tar file to push, see https://github.com/actions/upload-artifact (Default is 'docker-image')."
    required: true
    default: "docker-image"
  username:
    description: "Username for the Docker registry login."
    required: true
  password:
    description: "Password for the Docker registry login."
    required: true
  publisher:
    description: "Publisher to prefix Docker image (e.g. 'my-publisher' with a repository name)."
    required: false
  working-directory:
    description: "Working directory of your Gradle artifacts. (Default is root directory)"
    required: false
    default: "./"
runs:
  using: "composite"
  steps:
    - name: Download Docker image tar artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.image-artifact-name }}
        path: build
      working-directory: ${{ inputs.working-directory }}
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}   
    
    - name: Publish Docker image
      run: |
        if [[ $(ls -1 build/*.tar 2>/dev/null | wc -l) != 1 ]]; then
          >&2 echo "Error: A single image tar file is needed in the downloaded pipeline artifact. You can upload one before using this action: https://github.com/actions/upload-artifact."
          exit 1
        fi

        docker load --input build/*.tar

        if [[ "$GITHUB_REF" =~ ^ref/tags/.* ]]; then
          docker tag ${{ inputs.image-name }}:${{ github.run_id }} ${{ inputs.publisher }}/${{ inputs.image-name }}:latest
          docker tag ${{ inputs.image-name }}:${{ github.run_id }} ${{ inputs.publisher }}/${{ inputs.image-name }}:${GITHUB_REF/refs\/tags\//}
          docker push ${{ inputs.publisher }}/${{ inputs.image-name }}:latest
          docker push ${{ inputs.publisher }}/${{ inputs.image-name }}:${GITHUB_REF/refs\/tags\//}
        else
          docker tag ${{ inputs.image-name }}:${{ github.run_id }} ${{ inputs.publisher }}/${{ inputs.image-name }}:${{ github.run_id }}
          docker push ${{ inputs.publisher }}/${{ inputs.image-name }}:${{ github.run_id }}
        fi
      shell: bash
      working-directory: ${{ inputs.working-directory }}
