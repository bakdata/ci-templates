name: "Release Java artifacts"
description: "Release Java Gradle artifacts on Github"

inputs:
  release-type:
    description: "Scope of the release"
    required: true
  github-email:
    description: "GitHub email for requesting changes from API."
    required: true
  github-username:
    description: "GitHub username for requesting changes from API."
    required: true
  github-token:
    description: "GitHub token for requesting changes from API."
    required: true
  gradle-cache:
    description: "Whether Gradle caching is enabled or not. (Default is true)"
    required: false
    default: "true"
  gradle-cache-read-only:
    description: "Whether Gradle caching should be read-only. By default this value is 'false' for workflows on the GitHub default branch and 'true' for workflows on other branches."
    required: false
    default: ${{ github.event.repository != null && github.ref_name != github.event.repository.default_branch }}
  gradle-refresh-dependencies:
    description: "Whether Gradle should refresh dependencies. (Default is false)"
    required: false
    default: "false"
  gradle-version:
    description: "Gradle version to be installed. (Default is wrapper)"
    required: false
    default: "wrapper"
  java-distribution:
    description: "Java distribution to be installed. (Default is microsoft)"
    required: false
    default: "microsoft"
  java-version:
    description: "Java version to be installed. (Default is 11)"
    required: false
    default: "11"
  working-directory:
    description: "Working directory of your Gradle artifacts. (Default is .)"
    required: false
    default: "."

outputs:
  release-version:
    description: "The bumped version of your release."
    value: ${{ steps.evaluate-version.outputs.release-version }}

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: bakdata/ci-templates/actions/checkout@1.50.2
      with:
        fetch-depth: 0 # required for changelog generation
        persist-credentials: false # required for pushing to protected branch later

    - name: Setup git
      run: |
        git config user.email ${{ inputs.github-email }}
        git config user.name ${{ inputs.github-username }}
      shell: bash

    - name: Setup semver
      run: |
        sudo wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/3.3.0/src/semver
        sudo chmod +x /usr/local/bin/semver
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Set up Gradle with version ${{ inputs.gradle-version }}
      uses: bakdata/ci-templates/actions/java-gradle-setup@1.50.2
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        gradle-version: ${{ inputs.gradle-version }}
        gradle-cache: ${{ inputs.gradle-cache }}
        gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}

    - name: Bump version
      id: evaluate-version
      run: |
        old_version=$(./gradlew properties -q | grep "^version:" | awk '{print $2}' | tr -d '[:space:]' | xargs)
        if [[ "${{ inputs.release-type }}" == "patch" ]]; then
            release_version="${old_version%-*}"
        else
            release_version=$(semver bump "${{ inputs.release-type }}" "${old_version}")
        fi
        echo "release-version=$release_version" >> "$GITHUB_OUTPUT"
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Create release
      run: ./gradlew release -x test -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ steps.evaluate-version.outputs.release-version }} -Prelease.disablePushToRemote=true -Prelease.requireBranch=${{ github.event.repository.default_branch }} ${{ inputs.gradle-refresh-dependencies == 'true' && '--refresh-dependencies' || '' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Push release tag
      run: |
        git push --tags origin
      shell: bash

    - name: Create changelog
      uses: bakdata/ci-templates/actions/changelog-generate@1.50.2
      with:
        github-token: ${{ inputs.github-token }}
        tag: ${{ steps.evaluate-version.outputs.release-version }}
        changelog-file: CHANGELOG.md

    - name: Commit and push CHANGELOG.md file
      uses: bakdata/ci-templates/actions/commit-and-push@1.50.2
      with:
        commit-message: "Changelog for version ${{ steps.evaluate-version.outputs.release-version }}"
        github-username: ${{ inputs.github-username }}
        github-email: ${{ inputs.github-email }}
        github-token: ${{ inputs.github-token }}
        add-untracked: "true"
