name: "Release Java artifacts"
description: "Release Java Gradle artifacts on Github"

inputs:
  release-type:
    description: "Scope of the release"
    required: true
  github-email:
    description: "GitHub email for requesting changes from API."
    required: true
  github-username:
    description: "GitHub username for requesting changes from API."
    required: true
  github-token:
    description: "GitHub token for requesting changes from API."
    required: true
  working-directory:
    description: "Working directory of your Gradle artifacts. (Default is .)"
    required: false
    default: "."

outputs:
  release-version:
    description: "The bumped version of your release."
    value: ${{ steps.evaluate-version.outputs.release-version }}

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: bakdata/ci-templates/actions/checkout@1.50.4
      with:
        fetch-depth: 0 # required for changelog generation
        persist-credentials: false # required for pushing to protected branch later

    - name: Setup git
      run: |
        git config user.email ${{ inputs.github-email }}
        git config user.name ${{ inputs.github-username }}
      shell: bash

    - name: Configure git credentials
      uses: de-vri-es/setup-git-credentials@v2.1.2
      with:
        credentials: https://github-token:${{ inputs.github-token }}@github.com

    - name: Setup semver
      run: |
        sudo wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/3.3.0/src/semver
        sudo chmod +x /usr/local/bin/semver
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Bump version
      id: evaluate-version
      run: |
        old_version=$(./gradlew properties -q | grep "^version:" | awk '{print $2}' | tr -d '[:space:]' | xargs)
        if [[ "${{ inputs.release-type }}" == "patch" ]]; then
            release_version="${old_version%-*}"
        else
            release_version=$(semver bump "${{ inputs.release-type }}" "${old_version}")
        fi
        echo "release-version=$release_version" >> "$GITHUB_OUTPUT"
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Push release tag
      run: |
        git tag -a ${{ steps.evaluate-version.outputs.release-version }} -m "Release version ${{ steps.evaluate-version.outputs.release-version }}"
        git push --tags origin
      shell: bash

    - name: Create changelog
      id: build-changelog
      uses: bakdata/ci-templates/actions/changelog-generate@1.52.1
      with:
        github-token: ${{ secrets.github-token }}
        tag: ${{ steps.bump-version.outputs.release-version }}

    - name: Commit and push CHANGELOG.md file
      uses: bakdata/ci-templates/actions/commit-and-push@1.50.4
      with:
        commit-message: "Changelog for version ${{ steps.evaluate-version.outputs.release-version }}"
        github-username: ${{ inputs.github-username }}
        github-email: ${{ inputs.github-email }}
        github-token: ${{ inputs.github-token }}
        add-untracked: "true"
