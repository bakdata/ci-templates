name: "Assess code quality"
description: "Assess code quality and optionally test signing for Sonatype"
inputs:
  download-lfs-files:
    description: "Whether the Git checkout action should resolve LFS files or not. (Default is false)"
    required: false
    default: false
  gradle-cache:
    description: "Whether Gradle caching is enabled or not. (Default is true)"
    required: false
    default: true
  gradle-cache-read-only:
    description: "Whether Gradle caching should be read-only. By default this value is 'false' for workflows on the GitHub default branch and 'true' for workflows on other branches."
    required: false
    default: ${{ github.event.repository != null && github.ref_name != github.event.repository.default_branch }}
  gradle-refresh-dependencies:
    description: "Whether Gradle should refresh dependencies. (Default is false)"
    required: false
    default: "false"
  gradle-version:
    description: "Gradle version to be installed. (Default is wrapper)"
    required: false
    default: "wrapper"
  java-distribution:
    description: "Java distribution to be installed. (Default is microsoft)"
    required: false
    default: "microsoft"
  java-version:
    description: "Java version to be installed. (Default is 11)"
    required: false
    default: "11"
  signing-key-id:
    description: "Key id for signing the Sonatype publication."
    required: false
  signing-password:
    description: "Password for signing the Sonatype publication."
    required: false
  signing-secret-key-ring:
    description: "Key ring (base64 encoded) for signing the Sonatype publication."
    required: false
  sonar-organization:
    description: "Organization for Sonarqube."
    required: false
  sonar-token:
    description: "Token for Sonarqube."
    required: false
  sonar-host:
    description: "Host for Sonarqube."
    required: false
    default: "https://sonarcloud.io"
  sonar-project-key:
    description: "Project key for Sonarqube."
    required: false
  sonar-project-name:
    description: "Project name for Sonarqube."
    required: false
  working-directory:
    description: "Working directory of your Gradle artifacts. (Default is .)"
    required: false
    default: "."
runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: bakdata/ci-templates/actions/checkout@1.49.0
      with:
        lfs: ${{ inputs.download-lfs-files }}
        fetch-depth: 0
    - name: Set up Gradle with version ${{ inputs.gradle-version }}
      uses: bakdata/ci-templates/actions/java-gradle-setup@1.63.0
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        gradle-version: ${{ inputs.gradle-version }}
        gradle-cache: ${{ inputs.gradle-cache }}
        gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}
        gradle-dependency-graph: disabled
    - name: Assess code quality
      if: ${{ inputs.sonar-token != '' }}
      run: |
        ./gradlew \
          -Dsonar.host.url=${{ inputs.sonar-host }} \
          ${{ (inputs.sonar-organization != '' && format('-Dsonar.organization={0}', inputs.sonar-organization)) || '' }} \
          ${{ (inputs.sonar-project-key != '' && format('-Dsonar.projectKey={0}', inputs.sonar-project-key)) || '' }} \
          ${{ (inputs.sonar-project-name != '' && format('-Dsonar.projectName={0}', inputs.sonar-project-name)) || '' }} \
          ${{ (github.event_name == 'push' && github.ref_type != 'tag' && format('-Dsonar.branch.name={0}', github.ref_name)) || '' }} \
          ${{ (github.event_name == 'pull_request' && format('-Dsonar.pullrequest.key={0}', github.event.pull_request.number)) || '' }} \
          ${{ (github.event_name == 'pull_request' && format('-Dsonar.pullrequest.branch={0}', github.head_ref)) || '' }} \
          ${{ (github.event_name == 'pull_request' && format('-Dsonar.pullrequest.base={0}', github.base_ref)) || '' }} \
          --info --stacktrace sonar \
          ${{ inputs.gradle-refresh-dependencies == 'true' && '--refresh-dependencies' || '' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
    - name: Check if everything builds (incl. javadoc) for snapshot/release and signing works
      if: ${{ inputs.signing-secret-key-ring != '' && inputs.signing-key-id != '' && inputs.signing-password != '' }}
      run: |
        export SIGNING_SECRET_KEY_RING_FILE="$(mktemp -d)/secring.gpg"
        echo '${{ inputs.signing-secret-key-ring }}' | base64 -d > $SIGNING_SECRET_KEY_RING_FILE
        ./gradlew --info --stacktrace sign
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        SIGNING_KEY_ID: ${{ inputs.signing-key-id }}
        SIGNING_PASSWORD: ${{ inputs.signing-password }}
        CI: true
