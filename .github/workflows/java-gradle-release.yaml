name: Reusable workflow for building and publishing java gradle artifacts

on:
  workflow_call:
    inputs:
      release-type:
        description: "Scope of the release (major, minor or patch)."
        required: true
        type: string
      ref:
        description: "Ref name to checkout the repository."
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      java-distribution:
        description: "The java distribution to be installed. (Default is temurin)"
        required: false
        type: string
        default: "temurin"
      java-version:
        description: "The java version to be installed. (Default is 11)"
        required: false
        type: string
        default: "11"
      gradle-version:
        description: "The gradle version to be installed. (Default is 6.7.1)"
        required: false
        type: string
        default: "6.7.1"
      gradle-cache:
        description: "The gradle cache to use. Options are gradle, maven, sbt. (Default is gradle)"
        required: false
        type: string
        default: "gradle"
      working-directory:
        description: "The working directory of your Gradle artifacts. (Default is root directory)"
        required: false
        type: string
        default: "./"
    secrets:
      github-username:
        description: "GitHub username for committing the changes."
        required: true
      github-email:
        description: "GitHub email for committing the changes."
        required: true
      github-token:
        description: "GitHub token for committing the changes."
        required: true

    # Map the workflow outputs to job outputs
    outputs:
      release-tag:
        description: "The release tag."
        value: ${{ jobs.release.outputs.release-version }}

jobs:
  evaluate-version:
    name: Evaluate version
    runs-on: ubuntu-22.04

    # Map the job outputs to step outputs
    outputs:
      release-version: ${{ steps.release.outputs.version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      
      - name: Calculate release version
        id: release
        run: |
          version=$(grep "version=" gradle.properties | cut -d'=' -f2)
          if [[ "${{ inputs.release-type }}" == "patch" ]]; then
              version=${version%-*}
          elif [[ "${{ inputs.release-type }}" == "minor" ]]; then
              version=${version%%.*}.$((`echo ${version} | cut -d'.' -f 2`+1)).0
          elif [[ "${{ inputs.release-type }}" == "major" ]]; then
              version=$((${version%%.*}+1)).0.0
          elif [[ "${{ inputs.release-type }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              version=${{ inputs.release-type }}
          else
              echo "Got unsupported version ${{ inputs.release-type }}, use patch|minor|major|<version>" >&2
              exit 1
          fi
          echo ::set-output name=version::$(echo $version)
        shell: bash
        working-directory: ${{ inputs.working-directory }}

  generate-changelog:
    name: Generate changelog
    needs: evaluate-version
    runs-on: ubuntu-22.04
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Gradle with version ${{ inputs.gradle-version }}
        uses: bakdata/ci-templates/actions/java-gradle-setup@feature/java-gradle
        with:
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}

      - name: Generate changelog
        run: ./gradlew -Pchangelog.releaseVersion=${{ github.jobs.evaluate-version.outputs.release-version }} --info --stacktrace generateChangelog
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        env:
          GITHUB_USER: ${{ secrets.github-username }}
          GITHUB_TOKEN: ${{ secrets.github-token }}

      - name: Commit and push changelog
        uses: bakdata/ci-templates/actions/commit-and-push@v1.0.0
        with:
          ref: ${{ inputs.ref }}
          commit-message: "Changelog for version ${{ github.jobs.evaluate-version.outputs.release-version }}"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}
  
  release:
    name: Release
    needs: generate-changelog
    runs-on: ubuntu-22.04
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      
      - name: Set up Gradle with version ${{ inputs.gradle-version }}
        uses: bakdata/ci-templates/actions/java-gradle-setup@feature/java-gradle
        with:
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}

      - name: Release
        run: ./gradlew --Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ github.jobs.evaluate-version.outputs.release-version }} --stacktrace --info release -x test
        shell: bash
        working-directory: ${{ inputs.working-directory }}
        env:
          GITHUB_USER: ${{ secrets.github-username }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
