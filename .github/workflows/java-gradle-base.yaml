name: Java Gradle Base
on:
    workflow_call:
        inputs:
            download-lfs-files:
                description: Whether the Git checkout action should resolve LFS files or not. (Default is false)
                required: false
                type: boolean
                default: false
            gradle-cache:
                description: Whether Gradle caching is enabled or not. (Default is true)
                required: false
                type: boolean
                default: true
            gradle-cache-read-only:
                description: Whether Gradle caching should be read-only. Only used for build and test jobs. (Default is false)
                required: false
                type: boolean
                default: false
            gradle-refresh-dependencies:
                description: Whether Gradle should refresh dependencies. (Default is false)
                required: false
                type: boolean
                default: false
            gradle-version:
                description: Gradle version to be installed. (Default is wrapper)
                required: false
                type: string
                default: wrapper
            java-distribution:
                description: Java distribution to be installed. (Default is microsoft)
                required: false
                type: string
                default: microsoft
            java-version:
                description: Java version to be installed. (Default is 11)
                required: false
                type: string
                default: '11'
            working-directory:
                description: Working directory of your Gradle artifacts. (Default is .)
                required: false
                type: string
                default: .
        secrets:
            GOOGLE_WORKLOAD_IDENTITY_PROVIDER:
                description: The workload identity provider to use for fetching secrets
                required: true
            GOOGLE_SERVICE_ACCOUNT:
                description: The service account to use to fetch the secrets
                required: true
            GOOGLE_PROJECT_ID:
                description: The id of the project which contains the secrets
                required: true
concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-java-gradle-base
    cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}
jobs:
    build:
        name: Build
        runs-on: ubuntu-22.04
        steps:
        -   name: Authenticate with GCloud
            uses: google-github-actions/auth@v2
            id: auth
            with:
                workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        -   name: Fetch secrets from GSM
            id: fetch-secrets
            uses: google-github-actions/get-secretmanager-secrets@v2
            with:
                secrets: |-
                    signing-key-id:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_KEY_ID
                    signing-password:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_PASSWORD
                    signing-secret-key-ring:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_SECRET_KEY_RING
                    sonar-organization:${{ secrets.GOOGLE_PROJECT_ID }}/SONARCLOUD_ORGANIZATION
                    sonar-token:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_SECRET_KEY_RING
                export_to_environment: 'true'
        -   name: Build
            uses: bakdata/ci-templates/actions/java-gradle-build@1.63.0
            with:
                java-distribution: ${{ inputs.java-distribution }}
                java-version: ${{ inputs.java-version }}
                gradle-version: ${{ inputs.gradle-version }}
                gradle-cache: ${{ inputs.gradle-cache }}
                gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}
                gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
                gradle-dependency-graph: generate-and-submit
                working-directory: ${{ inputs.working-directory }}
    test:
        name: Test
        runs-on: ubuntu-22.04
        needs: build
        steps:
        -   name: Authenticate with GCloud
            uses: google-github-actions/auth@v2
            id: auth
            with:
                workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        -   name: Fetch secrets from GSM
            id: fetch-secrets
            uses: google-github-actions/get-secretmanager-secrets@v2
            with:
                secrets: |-
                    signing-key-id:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_KEY_ID
                    signing-password:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_PASSWORD
                    signing-secret-key-ring:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_SECRET_KEY_RING
                    sonar-organization:${{ secrets.GOOGLE_PROJECT_ID }}/SONARCLOUD_ORGANIZATION
                    sonar-token:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_SECRET_KEY_RING
                export_to_environment: 'true'
        -   name: Run unit tests
            uses: bakdata/ci-templates/actions/java-gradle-test@1.63.0
            with:
                gradle-cache: ${{ inputs.gradle-cache }}
                gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}
                gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
                gradle-dependency-graph: disabled
                gradle-version: ${{ inputs.gradle-version }}
                java-distribution: ${{ inputs.java-distribution }}
                java-version: ${{ inputs.java-version }}
                working-directory: ${{ inputs.working-directory }}
    assess-code-quality:
        name: Asses code quality
        if: ${{ !github.event.repository.private }}
        runs-on: ubuntu-22.04
        needs: test
        steps:
        -   name: Authenticate with GCloud
            uses: google-github-actions/auth@v2
            id: auth
            with:
                workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
                service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        -   name: Fetch secrets from GSM
            id: fetch-secrets
            uses: google-github-actions/get-secretmanager-secrets@v2
            with:
                secrets: |-
                    signing-key-id:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_KEY_ID
                    signing-password:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_PASSWORD
                    signing-secret-key-ring:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_SECRET_KEY_RING
                    sonar-organization:${{ secrets.GOOGLE_PROJECT_ID }}/SONARCLOUD_ORGANIZATION
                    sonar-token:${{ secrets.GOOGLE_PROJECT_ID }}/SONATYPE_SIGNING_SECRET_KEY_RING
                export_to_environment: 'true'
        -   name: Assess code quality
            uses: bakdata/ci-templates/actions/java-gradle-assess-code-quality@1.64.0
            with:
                download-lfs-files: ${{ inputs.download-lfs-files }}
                gradle-cache: ${{ inputs.gradle-cache }}
                gradle-cache-read-only: true
                gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
                gradle-version: ${{ inputs.gradle-version }}
                java-distribution: ${{ inputs.java-distribution }}
                java-version: ${{ inputs.java-version }}
                signing-key-id: ${{ env.signing-key-id }}
                signing-password: ${{ env.signing-password }}
                signing-secret-key-ring: ${{ env.signing-secret-key-ring }}
                sonar-organization: ${{ env.sonar-organization }}
                sonar-token: ${{ env.sonar-token }}
                working-directory: ${{ inputs.working-directory }}
permissions:
    contents: read
    id-token: write
