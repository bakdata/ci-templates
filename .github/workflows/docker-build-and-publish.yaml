name: Docker build and publish
# Reusable workflow to build and push an image from a Dockerfile to any container registry

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-docker
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      docker-context:
        description: "The docker context."
        required: false
        default: "."
        type: string
      dockerfile-path:
        description: "Path to the Dockerfile."
        required: false
        default: "Dockerfile"
        type: string
      docker-registry:
        description: "Host where the image should be pushed to."
        required: false
        default: ""
        type: string
      image-namespace:
        description: "Namespace of Docker image."
        required: false
        default: ""
        type: string
      image-name:
        description: "Name of Docker image."
        required: false
        default: "${{ github.event.repository.name }}"
        type: string
      image-tag:
        description: "Tag of Docker image."
        required: false
        default: "pipeline-${{ github.run_id }}-git-${GITHUB_SHA::8}"
        type: string
      ref:
        description: "Ref name to checkout"
        required: false
        default: ""
        type: string
      retention-days:
        description: "Number of days the image artifact should be stored on GitHub."
        required: false
        default: 1
        type: number
      image-artifact-name:
        description: "Name of the artifact that contains the Docker image.tar file to push, see https://github.com/actions/upload-artifact."
        required: false
        default: "image-artifact"
        type: string
      working-directory:
        description: "Working directory for your Docker artifacts. (Default is .)"
        required: false
        default: "."
        type: string
    secrets:
      docker-user:
        description: "Username for the Docker registry login."
        required: true
      docker-password:
        description: "Password for the Docker registry login."
        required: true
      # if this workflow should be automatically triggered after a new tag was pushed by another action,
      # then configure the github token to overcome it (as described here: https://github.com/orgs/community/discussions/27028)
      github-token:
        description: "GitHub token."
        required: false

jobs:
  docker-build:
    name: Docker build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: bakdata/ci-templates/actions/checkout@1.32.0
        with:
          ref: ${{ inputs.ref }}
          token: ${{ secrets.github-token }}
          persist-credentials: false

      - name: Build docker image and upload tar file
        uses: bakdata/ci-templates/actions/docker-build@v1.18.1
        with:
          docker-context: "${{ inputs.docker-context }}"
          dockerfile-path: "${{ inputs.dockerfile-path }}"
          image-name: "${{ inputs.image-name }}"
          image-artifact-name: "${{ inputs.image-artifact-name }}"
          retention-days: "${{ inputs.retention-days }}"
          working-directory: "${{ inputs.working-directory }}"

  docker-publish:
    name: Docker publish
    runs-on: ubuntu-22.04
    needs: [docker-build]
    steps:
      - name: Login to the Registry
        uses: "docker/login-action@v2.1.0"
        with:
          registry: "${{ inputs.docker-registry }}"
          username: "${{ secrets.docker-user }}"
          password: "${{ secrets.docker-password }}"

      - name: Use uploaded tar files to push new image to docker
        uses: bakdata/ci-templates/actions/docker-publish@v1.18.1
        with:
          docker-registry: "${{ inputs.docker-registry }}"
          image-namespace: "${{ inputs.image-namespace }}"
          image-name: "${{ inputs.image-name }}"
          image-tag: "${{ inputs.image-tag }}"
          image-artifact-name: "${{ inputs.image-artifact-name }}"
          working-directory: "${{ inputs.working-directory }}"
