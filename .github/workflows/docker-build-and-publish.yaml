name: Docker build and publish
# Reusable workflow to build and push an image from a Dockerfile to any container registry

on:
  workflow_call:
    inputs:
      docker-context:
        description: "The docker context."
        required: false
        default: "."
        type: string
      dockerfile-path:
        description: "Path to the Dockerfile."
        required: false
        default: "./Dockerfile"
        type: string
      docker-build-args:
        description: "List of build-time variables (see https://github.com/docker/build-push-action?tab=readme-ov-file#inputs)"
        required: false
        default: ""
        type: string
      docker-registry:
        description: "Host where the image should be pushed to."
        required: false
        default: "docker.io"
        type: string
      image-namespace:
        description: "Namespace of Docker image."
        required: false
        default: "bakdata"
        type: string
      image-name:
        description: "Name of Docker image."
        required: false
        default: "${{ github.event.repository.name }}"
        type: string
      image-tag:
        description: "Tag of Docker image."
        required: false
        default: "pipeline-${{ github.run_id }}-git-{{ sha }}"
        type: string
      ref:
        description: "Ref name to checkout"
        required: false
        default: ""
        type: string
      checkout-submodules:
        description: "Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules."
        required: false
        default: "false"
        type: string
      checkout-lfs-files:
        description: "Whether the Git checkout action should resolve LFS files or not. (Default is false)"
        required: false
        type: boolean
        default: false

    secrets:
      docker-user:
        description: "Username for the Docker registry login."
        required: true
      docker-password:
        description: "Password for the Docker registry login."
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-docker-${{ inputs.image-name }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: bakdata/ci-templates/actions/checkout@1.44.0
        with:
          ref: ${{ inputs.ref }}
          lfs: ${{ inputs.checkout-lfs-files }}
          submodules: ${{ inputs.checkout-submodules }}

      - name: Login to the Registry
        uses: "docker/login-action@v3"
        with:
          registry: "${{ inputs.docker-registry }}"
          username: "${{ secrets.docker-user }}"
          password: "${{ secrets.docker-password }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image name
        run: |
          fullImageName="${{ inputs.image-name }}"
          if [[ -n "${{ inputs.image-namespace }}" ]]; then
            fullImageName="${{ inputs.image-namespace }}/${fullImageName}"
          fi
          if [[ -n "${{ inputs.docker-registry }}" ]]; then
            fullImageName="${{ inputs.docker-registry }}/${fullImageName}"
          fi

          echo "IMAGE_NAME=${fullImageName}" >> "$GITHUB_ENV"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # on push/PR: dynamically set the CI run id and Git SHA as a custom tag
          # on branch push: additionally tag with the branch name
          # on tag: release as latest and semver tag
          tags: |
            event=push,type=raw,value=${{ inputs.image-tag }}
            event=pr,type=raw,value=${{ inputs.image-tag }}
            event=branch,type=ref,enable=${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main' }}
            event=tag,type=semver,pattern={{ version }}
        env:
          DOCKER_METADATA_PR_HEAD_SHA: true # set correct sha for PRs

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.docker-context }}
          file: ${{ inputs.dockerfile-path }}
          build-args: ${{ inputs.docker-build-args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
