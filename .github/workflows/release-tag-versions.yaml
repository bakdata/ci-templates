name: Reusable workflow for releasing tag versions

on:
  workflow_call:
    inputs:
      version-configs-dir:
        description: "The Path to the directory containing the file where the versioning is defined and `.bumpversion.cfg` file."
        required: true
        type: string
      versioning-file:
        description: "The name of the file where the version is declared (E.g: Dockerfile, Chart.yaml ). This file is also specified in the `.bumpversion.cfg` "
        required: true
        type: string
      release-type:
        description: "Scope of the release (major, minor or patch)."
        required: true
        type: string
      next-dev-release-type:
        description: "Scope of the next release (minor or patch) for developers"
        required: true
        type: string
      next-dev-release-suffix:
        description: "The suffix to add for the developer version"
        required: false
        default: "SNAPSHOT"
        type: string
    secrets:
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

jobs:
  bump_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out default branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.github-token }}

      - name: Bump version
        id: release-tag
        uses: bakdata/ci-templates/actions/bump-version@feat/set-output
        with:
          release-type: ${{ inputs.release-type }}
          working-directory: ${{ inputs.version-configs-dir }}

      - name: Commit and push the file where the versioning is defined & .bumpversion.cfg file to release new tag
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          commit-message: "Bump version and create dev version ${{ steps.release-tag.outputs.old-tag }} → ${{ steps.release-tag.outputs.release-tag }}"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}

      - name: Create and push new Tag
        run: |
          tag=${{ steps.release-tag.outputs.release-tag }}
          message='Create new Tag: ${{ steps.release-tag.outputs.release-tag }}'
          git config user.name "${{ secrets.github-username }}"
          git config user.email "${{ secrets.github-email }}"
          git tag -a "${tag}" -m "${message}"
          git push origin "${tag}"
        shell: bash
        working-directory: ${{ inputs.version-configs-dir }}

      - name: Create next developer release tag
        id: dev-tag
        uses: bakdata/ci-templates/actions/bump-version@feat/set-output
        with:
          release-type: ${{ inputs.next-dev-release-type }}
          working-directory: ${{ inputs.version-configs-dir }}

      - name: Add -${{ inputs.next-dev-release-suffix }} version in the file where the versioning is defined and .bumpversion.cfg
        run: |
          sed -i -e 's/current_version =.*/current_version = ${{ steps.dev-tag.outputs.release-tag }}-${{ inputs.next-dev-release-suffix }}/' .bumpversion.cfg
          sed -i -e 's/version:.*/version: ${{ steps.dev-tag.outputs.release-tag }}-${{ inputs.next-dev-release-suffix }}/' ${{ inputs.versioning-file }} 
        shell: bash
        working-directory: ${{ inputs.version-configs-dir }}

      - name: Commit and push the file where the versioning is defined & .bumpversion.cfg file (containing the -${{ inputs.next-dev-release-suffix }} version)
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          commit-message: "Bump version and create dev version ${{ steps.release-tag.outputs.old-tag }} → ${{ steps.release-tag.outputs.release-tag }} → ${{ steps.dev-tag.outputs.release-tag }}-${{ inputs.next-dev-release-suffix }}"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}
