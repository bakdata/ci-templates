name: Java Gradle library

on:
  workflow_call:
    inputs:
      java-distribution:
        description: "Java distribution to be installed. (Default is microsoft)"
        required: false
        type: string
        default: "microsoft"
      java-version:
        description: "Java version to be installed. (Default is 11)"
        required: false
        type: string
        default: "11"
      gradle-version:
        description: "Gradle version to be installed. (Default is wrapper)"
        required: false
        type: string
        default: "wrapper"
      gradle-cache:
        description: "Enable Gradle caching? (Default true)"
        required: false
        type: boolean
        default: true
      gradle-cache-read-only:
        description: "Use Gradle cache in read-only mode (Default false)"
        required: false
        type: boolean
        default: false
      gradle-refresh-dependencies:
        description: "Force Gradle to refresh dependencies (Default false)"
        required: false
        type: boolean
        default: false
      working-directory:
        description: "Project directory (Default .)"
        required: false
        type: string
        default: "."
    secrets:
      OSSRH_USERNAME:
        required: true
      OSSRH_PASSWORD:
        required: true
      SIGNING_KEY_ID:
        required: true
      SIGNING_PASSWORD:
        required: true
      SIGNING_SECRET_KEY_RING:
        required: true
      GH_TOKEN:
        required: false  # Optional: needed only if you want GitHub releases

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-java-gradle-lib
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    name: Build, Test and Check Quality
    uses: bakdata/ci-templates/.github/workflows/java-gradle-base.yaml@1.67.0
    with:
      java-distribution: ${{ inputs.java-distribution }}
      java-version: ${{ inputs.java-version }}
      gradle-version: ${{ inputs.gradle-version }}
      gradle-cache: ${{ inputs.gradle-cache }}
      gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}
      gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
      working-directory: ${{ inputs.working-directory }}

  publish:
    name: Publish to Maven Central
    if: ${{ !github.event.repository.private }}
    runs-on: ubuntu-22.04
    needs: build-and-test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Publish with Gradle
        uses: bakdata/ci-templates/actions/java-gradle-publish@1.63.0
        with:
          signing-secret-key-ring: ${{ secrets.SIGNING_SECRET_KEY_RING }}
          signing-key-id: ${{ secrets.SIGNING_KEY_ID }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
          ossrh-username: ${{ secrets.OSSRH_USERNAME }}
          ossrh-password: ${{ secrets.OSSRH_PASSWORD }}
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}

  release:
    name: GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: publish

    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          token: ${{ secrets.GH_TOKEN || github.token }}
