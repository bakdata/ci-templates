name: Java Gradle Docker
# Reusable workflow for building and publishing Java Gradle artifacts including a tarball image

on:
  workflow_call:
    inputs:
      docker-publisher:
        description: "Publisher to prefix Docker image."
        required: true
        type: string
      docker-registry:
        description: "Host where the image should be pushed to."
        required: false
        type: string
        default: "docker.io"
      platforms:
        description: "Architectures for the created image (comma separated)"
        required: false
        default: "linux/amd64,linux/arm64"
        type: string
      java-distribution:
        description: "Java distribution to be installed. (Default is microsoft)"
        required: false
        type: string
        default: "microsoft"
      java-version:
        description: "Java version to be installed. (Default is 11)"
        required: false
        type: string
        default: "11"
      gradle-version:
        description: "Gradle version to be installed. (Default is wrapper)"
        required: false
        type: string
        default: "wrapper"
      gradle-cache:
        description: "Whether Gradle caching is enabled or not. (Default is true)"
        required: false
        type: boolean
        default: true
      gradle-cache-read-only:
        description: "Whether Gradle caching should be read-only. Only used for build and test jobs. (Default is false)"
        required: false
        type: boolean
        default: false
      gradle-refresh-dependencies:
        description: "Whether Gradle should refresh dependencies. (Default is false)"
        required: false
        type: boolean
        default: false
      working-directory:
        description: "Working directory of your Gradle artifacts. (Default is .)"
        required: false
        type: string
        default: "."

    secrets:
      sonar-token:
        description: "Token for Sonarcloud."
        required: false
      sonar-organization:
        description: "Organization for Sonarcloud"
        required: false
      signing-secret-key-ring:
        description: "Key ring (base64 encoded) for signing the Sonatype publication."
        required: false
      signing-key-id:
        description: "Key id for signing the Sonatype publication."
        required: false
      signing-password:
        description: "Password for signing the Sonatype publication."
        required: false
      ossrh-username:
        description: "Username for signing into Sonatype repository."
        required: false
      ossrh-password:
        description: "Password for signing into Sonatype repository."
        required: false
      docker-username:
        description: "Username for publishing to Dockerhub."
        required: true
      docker-password:
        description: "Password for publishing to Dockerhub."
        required: true
      github-token:
        description: "GitHub token for requesting changes from API."
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-java-gradle-docker
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  build-and-test:
    name: Build, Test and Assess code quality
    uses: bakdata/ci-templates/.github/workflows/java-gradle-base.yaml@1.66.0
    with:
      java-distribution: ${{ inputs.java-distribution }}
      java-version: ${{ inputs.java-version }}
      gradle-version: ${{ inputs.gradle-version }}
      gradle-cache: ${{ inputs.gradle-cache }}
      gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}
      gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
      working-directory: ${{ inputs.working-directory }}
    secrets:
      signing-key-id: ${{ secrets.signing-key-id }}
      signing-password: ${{ secrets.signing-password }}
      signing-secret-key-ring: ${{ secrets.signing-secret-key-ring }}
      sonar-organization: ${{ secrets.sonar-organization }}
      sonar-token: ${{ secrets.sonar-token }}

  build-jib:
    name: Build Docker image
    runs-on: ubuntu-22.04
    needs: build-and-test

    steps:
      - name: Login into docker
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-password }}

      - name: Jib build
        id: build-image
        uses: bakdata/ci-templates/actions/java-gradle-build-jib@1.63.0
        with:
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}
          repository: ${{ inputs.docker-registry }}/${{ inputs.docker-publisher }}
          platforms: ${{ inputs.platforms }}

  publish:
    name: Publish
    if: ${{ !github.event.repository.private }}
    runs-on: ubuntu-22.04
    needs: build-jib

    steps:
      - name: Publish
        uses: bakdata/ci-templates/actions/java-gradle-publish@1.63.0
        with:
          signing-secret-key-ring: ${{ secrets.signing-secret-key-ring }}
          signing-key-id: ${{ secrets.signing-key-id }}
          signing-password: ${{ secrets.signing-password }}
          ossrh-username: ${{ secrets.ossrh-username }}
          ossrh-password: ${{ secrets.ossrh-password }}
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}

  release:
    name: Create Github release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: [publish, build-jib]

    steps:
      - name: Release on Github
        uses: bakdata/ci-templates/actions/java-gradle-release-github@feature/gradle-release-git-cliff
        with:
          github-token: ${{ secrets.github-token }}
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}
