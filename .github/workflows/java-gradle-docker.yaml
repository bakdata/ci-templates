name: Java Gradle Docker
# Reusable workflow for building and publishing Java Gradle artifacts including a tarball image

on:
  workflow_call:
    inputs:
      docker-publisher:
        description: "Publisher to prefix Docker image."
        required: true
        type: string
      java-distribution:
        description: "Java distribution to be installed. (Default is microsoft)"
        required: false
        type: string
        default: "microsoft"
      java-version:
        description: "Java version to be installed. (Default is 11)"
        required: false
        type: string
        default: "11"
      gradle-version:
        description: "Gradle version to be installed. (Default is wrapper)"
        required: false
        type: string
        default: "wrapper"
      gradle-cache:
        description: "Whether Gradle caching is enabled or not. (Default is true)"
        required: false
        type: boolean
        default: true
      gradle-cache-read-only:
        description: "Whether Gradle caching should be read-only. Only used for build and test jobs. (Default is false)"
        required: false
        type: boolean
        default: false
      gradle-refresh-dependencies:
        description: "Whether Gradle should refresh dependencies. (Default is false)"
        required: false
        type: boolean
        default: false
      working-directory:
        description: "Working directory of your Gradle artifacts. (Default is .)"
        required: false
        type: string
        default: "."

    secrets:
      sonar-token:
        description: "Token for Sonarcloud."
        required: true
      sonar-organization:
        description: "Organization for Sonarcloud"
        required: true
      signing-secret-key-ring:
        description: "Key ring (base64 encoded) for signing the Sonatype publication."
        required: true
      signing-key-id:
        description: "Key id for signing the Sonatype publication."
        required: true
      signing-password:
        description: "Password for signing the Sonatype publication."
        required: true
      ossrh-username:
        description: "Username for signing into Sonatype repository."
        required: true
      ossrh-password:
        description: "Password for signing into Sonatype repository."
        required: true
      docker-username:
        description: "Username for publishing to Dockerhub."
        required: true
      docker-password:
        description: "Password for publishing to Dockerhub."
        required: true
      github-token:
        description: "GitHub token for requesting changes from API."
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-java-gradle-docker
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  build-and-test:
    name: Build, Test and Assess code quality
    uses: bakdata/ci-templates/.github/workflows/java-gradle-base.yaml@1.43.0
    with:
      java-distribution: ${{ inputs.java-distribution }}
      java-version: ${{ inputs.java-version }}
      gradle-version: ${{ inputs.gradle-version }}
      gradle-cache: ${{ inputs.gradle-cache }}
      gradle-cache-read-only: ${{ inputs.gradle-cache-read-only }}
      gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
      working-directory: ${{ inputs.working-directory }}
    secrets:
      signing-key-id: ${{ secrets.signing-key-id }}
      signing-password: ${{ secrets.signing-password }}
      signing-secret-key-ring: ${{ secrets.signing-secret-key-ring }}
      sonar-organization: ${{ secrets.sonar-organization }}
      sonar-token: ${{ secrets.sonar-token }}

  build-jib:
    name: Build tarball image
    runs-on: ubuntu-22.04
    needs: build-and-test

    steps:
      - name: Build tarball image
        uses: bakdata/ci-templates/actions/java-gradle-build-jib@1.43.0
        with:
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}

  publish:
    name: Publish
    runs-on: ubuntu-22.04
    needs: build-jib

    steps:
      - name: Publish
        uses: bakdata/ci-templates/actions/java-gradle-publish@1.43.0
        with:
          signing-secret-key-ring: ${{ secrets.signing-secret-key-ring }}
          signing-key-id: ${{ secrets.signing-key-id }}
          signing-password: ${{ secrets.signing-password }}
          ossrh-username: ${{ secrets.ossrh-username }}
          ossrh-password: ${{ secrets.ossrh-password }}
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}

  publish-jib-image:
    name: Publish tarball image
    runs-on: ubuntu-22.04
    needs: build-jib

    steps:
      - name: Publish tarball image
        uses: bakdata/ci-templates/actions/docker-publish@v1.46.3
        with:
          publisher: ${{ inputs.docker-publisher }}
          username: ${{ secrets.docker-username }}
          password: ${{ secrets.docker-password }}

  release:
    name: Create Github release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    needs: [publish, publish-jib-image]

    steps:
      - name: Release on Github
        uses: bakdata/ci-templates/actions/java-gradle-release-github@1.43.0
        with:
          github-token: ${{ secrets.github-token }}
          java-distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}
          gradle-version: ${{ inputs.gradle-version }}
          gradle-cache: ${{ inputs.gradle-cache }}
          gradle-cache-read-only: true
          gradle-refresh-dependencies: ${{ inputs.gradle-refresh-dependencies }}
          working-directory: ${{ inputs.working-directory }}
