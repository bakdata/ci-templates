name: Helm GKE Deploy
on:
  workflow_call:
    inputs:
      release-name:
        description: Helm release name
        required: true
        type: string
      namespace:
        description: K8s namespace to deploy in
        required: true
        type: string
      chart:
        description: Helm chart to deploy
        required: true
        type: string
      values-yaml:
        description: File path as string for a single Helm value file or as json array for multiple Helm value files
        required: true
        type: string
      repository-name:
        description: Helm repository name
        required: false
        type: string
      repository-url:
        description: Url of the repository
        required: false
        type: string
      chart-version:
        description: Chart version
        required: false
        type: string
      post-renderer:
        description: File path as string for a Helm post renderer
        required: false
        type: string
      timeout:
        description: Timeout for the Helm command in seconds
        default: '1200'
        required: false
        type: string
      gcloud-sdk-version:
        description: GCloud SDK version
        default: 376.0.0
        required: false
        type: string
      kubectl-version:
        description: Kubectl version
        default: v1.23.0
        required: false
        type: string
      helm-version:
        description: Helm version
        default: v3.8.1
        required: false
        type: string
    secrets:
      GOOGLE_WORKLOAD_IDENTITY_PROVIDER:
        description: The workload identity provider to use for fetching secrets
        required: true
      GOOGLE_SERVICE_ACCOUNT:
        description: The service account to use to fetch the secrets
        required: true
      GOOGLE_PROJECT_ID:
        description: The id of the project which contains the secrets
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-helm-gke-deploy
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    steps:
      - name: Authenticate with GCloud
        uses: google-github-actions/auth@v2
        id: auth
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
      - name: Fetch secrets from GSM
        id: fetch-secrets
        uses: google-github-actions/get-secretmanager-secrets@v2
        with:
          secrets: |-
            gke-cluster:${{ secrets.GOOGLE_PROJECT_ID }}/GKE_CLUSTER
            gke-project:${{ secrets.GOOGLE_PROJECT_ID }}/GKE_PROJECT
            gke-region:${{ secrets.GOOGLE_PROJECT_ID }}/GKE_REGION
            gke-service-account:${{ secrets.GOOGLE_PROJECT_ID }}/GKE_SERVICE_ACCOUNT
          export_to_environment: 'true'
      - name: Checkout repository
        uses: bakdata/ci-templates/actions/checkout@1.49.0
      - name: Setup credentials
        uses: bakdata/ci-templates/actions/setup-credentials@1.40.0
        with:
          gke-service-account: ${{ env.gke-service-account }}
          gke-project: ${{ env.gke-project }}
          gke-region: ${{ env.gke-region }}
          gke-cluster: ${{ env.gke-cluster }}
          gcloud-sdk-version: ${{ inputs.gcloud-sdk-version }}
      - name: Setup environment
        uses: bakdata/ci-templates/actions/helm-setup@v1.20.0
        with:
          kubectl-version: ${{ inputs.kubectl-version }}
          helm-version: ${{ inputs.helm-version }}
      - name: Deploy Helm chart
        uses: bakdata/ci-templates/actions/helm-deploy@v1.20.0
        with:
          release-name: ${{ inputs.release-name }}
          namespace: ${{ inputs.namespace }}
          chart: ${{ inputs.chart }}
          values-yaml: ${{ inputs.values-yaml }}
          chart-version: ${{ inputs.chart-version }}
          post-renderer: ${{ inputs.post-renderer }}
          timeout: ${{ inputs.timeout }}
          repository-name: ${{ inputs.repository-name }}
          repository-url: ${{ inputs.repository-url }}
permissions:
  contents: read
  id-token: write
