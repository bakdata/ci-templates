name: Reusable workflow for packaging and publishing Helm charts on GitHub pages

on:
  workflow_call:
    inputs:
      page-url:
        description: "URL to the GitHub pages website of the repository."
        required: true
        type: string
      release-type:
        description: "Scope of the release (major, minor or patch)."
        required: true
        type: string
      ref:
        description: "The ref name to checkout the repository."
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      lint-config-path:
        description: "The path to the lint configuration file (See https://github.com/helm/chart-testing/blob/main/pkg/config/test_config.yaml)."
        required: false
        default: ".github/lint-config.yaml"
        type: string
      helm-version:
        description: "The Helm version."
        required: false
        default: "v3.10.1"
        type: string
      charts-dir:
        description: "The directory containing the Helm charts and `.bumpversion.cfg` file."
        required: false
        default: "."
        type: string
      skip-download:
        description: "Skip downloading index.yaml and previous Chart versions from GitHub pages. (To be used during setup of this workflow)"
        required: false
        default: "false"
        type: string
      artifact-dir:
        description: "Directory inside `charts-dir` for preparation of the GitHub pages artifact."
        required: false
        default: "artifact"
        type: string

    secrets:
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

    # Map the workflow outputs to job outputs
    outputs:
      release-tag:
        description: "The release tag."
        value: ${{ jobs.helm-release.outputs.release-tag }}
      old-tag:
        description: "The old tag."
        value: ${{ jobs.helm-release.outputs.old-tag }}

jobs:
  helm-lint:
    runs-on: ubuntu-22.04

    steps:
      - name: Lint Helm chart
        uses: bakdata/ci-templates/actions/helm-lint@v1.0.0
        with:
          lint-config-path: "${{ inputs.lint-config-path }}"

  helm-release:
    runs-on: ubuntu-22.04
    needs: helm-lint

    # Map the job outputs to step outputs
    outputs:
      release-tag: ${{ steps.release-tag.outputs.release-tag }}
      old-tag: ${{ steps.release-tag.outputs.old-tag }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Bump version
        id: release-tag
        uses: bakdata/ci-templates/actions/bump-version@v1.5.2
        with:
          release-type: ${{ inputs.release-type }}
          working-directory: ${{ inputs.charts-dir }}

      - name: Download previous Helm index
        run: curl -O -f ${{ inputs.page-url }}/index.yaml
        if: ${{ inputs.skip-download == 'false' }}
        shell: bash
        working-directory: ${{ inputs.charts-dir }}

      - name: Create Helm package & update index
        uses: bakdata/ci-templates/actions/helm-package@feat/helm-release
        with:
          charts-dir: ${{ inputs.charts-dir }}

      - name: Commit and push Chart.yaml & .bumpversion.cfg file
        uses: bakdata/ci-templates/actions/commit-and-push@feat/helm-release
        with:
          ref: ${{ inputs.ref }}
          commit-message: "Bump version ${{ steps.release-tag.outputs.old-tag }} â†’ ${{ steps.release-tag.outputs.release-tag }}"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}

      - name: Prepare artifact
        run: |
          mkdir ${{ inputs.artifact-dir }}
          cp index.yaml ${{ inputs.artifact-dir }}/
        shell: bash
        working-directory: ${{ inputs.charts-dir }}

      - name: Find previous package versions
        id: packages
        uses: mikefarah/yq@v4.28.1
        if: ${{ inputs.skip-download == 'false' }}
        with:
          cmd: yq '.entries.[] | map(.urls.[]) | join(",")' ${{ inputs.charts-dir }}/index.yaml

      - name: Download packages
        run: curl -O -f "${{ inputs.page-url }}/{${{ steps.packages.outputs.result }}}"
        if: ${{ inputs.skip-download == 'false' }}
        shell: bash
        working-directory: ${{ inputs.charts-dir }}/${{ inputs.artifact-dir }}

      - name: Create artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ inputs.charts-dir }}/${{ inputs.artifact-dir }}

  publish-gh-pages:
    runs-on: ubuntu-22.04
    needs: helm-release
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
