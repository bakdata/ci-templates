name: Generate changelog
# Reusable workflow to generate changelog after release

on:
  workflow_call:
    inputs:
      gh-changelog:
        description: Path to the Changelog.md file
        required: true
        type: string
      new-tag:
        description: Version after bump
        required: true
        type: string
      old-tag:
        description: Previous version
        required: true
        type: string

      bugLabels:
        description: "Issues with the specified labels will be added to Fixed bugs section"
        required: false
        default: "type/bug"
        type: string
      compareLink:
        description: "Include compare link (Full Changelog) between older version and newer version"
        required: false
        default: "true"
        type: string
      config:
        description: Path to the changelog config JSON file
        required: false
        default: "./.github/changelog-config.json"
        type: string
      doc-changelog:
        description: Path to the documentation changelog (if any exists)
        required: false
        default: ""
        type: string
      enhancementLabels:
        description: "Issues with the specified labels will be added to Implemented enhancements section"
        required: false
        default: "type/enhancement"
        type: string
      httpCache:
        description: "Use HTTP Cache to cache GitHub API requests (useful for large repos)"
        required: false
        default: "true"
        type: string
      issues:
        description: "Include closed issues in changelog"
        required: false
        default: "true"
        type: string
      issuesLabel:
        description: "Set up custom label for closed-issues section"
        required: false
        default: "**Miscellaneous:**"
        type: string
      issuesWoLabels:
        description: "Include closed issues without labels in changelog"
        required: false
        default: "true"
        type: string
      output:
        description: "Name of the output file for the generate changelog step"
        required: false
        default: "changes.md"
        type: string
      prWoLabels:
        description: "Include pull requests without labels in changelog"
        required: false
        default: "false"
        type: string
      pullRequests:
        description: "Include pull-requests in changelog"
        required: false
        default: "false"
        type: string
      stripGeneratorNotice:
        description: "Strip generator notice"
        required: false
        default: "false"
        type: string
      unreleased:
        description: "Add to log unreleased closed issues"
        required: false
        default: "true"
        type: string
      verbose:
        description: "Run verbosely"
        required: false
        default: "true"
        type: string

    secrets:
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

jobs:
  read-config-file:
    name: Read config file
    runs-on: ubuntu-22.04
    outputs:
      content: ${{ steps.read-config.outputs.content }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.4.0
        with:
          ref: ${{ github.event.repository.default_branch }}
          # required for getting all tags
          fetch-depth: 0
          # required for bypassing status checks when pushing
          token: "${{ secrets.github-token }}"

      - name: Read changelog config
        id: read-config
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          content=$(cat "${{ inputs.config }}")
          { echo "content<<EOF"; echo "$content"; echo "EOF"; } >> "$GITHUB_OUTPUT"
        shell: bash

  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-22.04
    needs: [read-config-file]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.4.0
        with:
          ref: ${{ github.event.repository.default_branch }}
          # required for getting all tags
          fetch-depth: 0
          # required for bypassing status checks when pushing
          token: "${{ secrets.github-token }}"

      - name: Generate Changelog
        id: generate-release-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: "${{ secrets.github-token }}"
          sinceTag: "${{ inputs.old-tag }}"
          output: "${{ inputs.output }}"
          stripGeneratorNotice: "true"
          issues: "${{ inputs.issues }}"
          unreleased: "${{ inputs.unreleased }}"
          pullRequests: "${{ inputs.pullRequests }}"
          compareLink: "${{ inputs.compareLink }}"
          issuesWoLabels: "${{ inputs.issuesWoLabels }}"
          futureRelease: "${{ inputs.new-tag }}"
          issuesLabel: "${{ inputs.issuesLabel }}"
          bugLabels: "${{ inputs.bugLabels }}"
          enhancementLabels: "${{ inputs.enhancementLabels }}"
          httpCache: "${{ inputs.httpCache }}"
          verbose: "${{ inputs.verbose }}"
          addSections: |
            ${{ needs.read-config-file.outputs.content }}

      - name: Update github Changelog
        run: |
          # Remove header from changes
          sed -i '1d' "${{ inputs.output }}"
          # Prepend changes.md after first header
          sed -i '/# Changelog/ r "${{ inputs.output }}"' "${{ inputs.gh-changelog }}"

        shell: bash

      - name: Update doc Changelog
        run: |
          if [ -n "${{ inputs.doc-changelog }}" ]; then 
            sed -i '1d' "${{ inputs.output }}"
            sed -i '/# Changelog/ r "${{ inputs.output }}"' "${{ inputs.doc-changelog }}"
            echo "!!!!!!!!!!!changed"
          fi
        shell: bash

      - name: Create release commit
        run: |
          # Set email and username for github-actions bot
          git config --local user.email "${{ secrets.github-email }}"
          git config --local user.name "${{ secrets.github-username }}"
          # Add changes
          git add ${{ inputs.gh-changelog }}
          if [ -n ${{ inputs.doc-changelog }} ]; then 
            echo "!!!!!! Not empty!"
            git add "${{ inputs.doc-changelog }}"
          fi
          git commit -m "Release v${{ inputs.new-tag }}"
          git push
