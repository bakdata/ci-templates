name: Helm Multi Release
# Reusable workflow for packaging and publishing Helm charts having multiple subcharts on GitHub pages

on:
  workflow_call:
    inputs:
      charts-dir:
        description: "The directory containing the Helm chart and `.bumpversion.cfg` file."
        required: true
        type: string
      root-branch:
        description: "The main branch."
        default: "main"
        required: false
        type: string
      subdirs:
        description: "List of subdir to consider" # "['subdir1', 'subdir2', 'subdir3']"
        required: true
        type: string
      artifact-dir:
        description: "Directory inside `charts-dir` for preparation of the GitHub pages artifact."
        required: false
        default: "artifacts"
        type: string
      gh-pages-branch:
        description: "Name of branch containing the artifacts"
        default: "gh-pages"
        type: string
      project-root-dir:
        description: "Github dir where the charts dir is located"
        required: false
        default: "."
        type: string
      helm-version:
        description: "The Helm version."
        required: false
        default: "v3.10.1"
        type: string
      lint-config-path:
        description: "The path to the lint configuration file (See https://github.com/helm/chart-testing/blob/main/pkg/config/test_config.yaml)."
        required: false
        default: ".github/lint-config.yaml"
        type: string

    secrets:
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

jobs:
  helm-lint:
    runs-on: ubuntu-22.04

    steps:
      - name: Lint Helm chart
        uses: bakdata/ci-templates/actions/helm-lint@v1.0.0
        with:
          lint-config-path: "${{ inputs.lint-config-path }}"

  update-version:
    runs-on: ubuntu-22.04
    needs: [helm-lint]
    env:
      root-dir: ${{ inputs.charts-dir }}
      ref: ${{ inputs.root-branch }}
      release-tag: ${{github.ref_name}}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}

      - name: Use the tag to update chart.yaml files
        run: |
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y
          for subdir in */; do
            cat "$subdir/Chart.yaml"
            yq e -i '.version = "${{  env.release-tag }}"' "$subdir/Chart.yaml"
            cat "$subdir/Chart.yaml"
          done
        shell: bash
        working-directory: ${{ env.root-dir }}

      - name: Commit and push updated charts
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          add-untracked: true
          ref: ${{ env.ref }}
          commit-message: "Update Chart versions"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}

  package-new-artifacts:
    strategy:
      matrix:
        subdir: ${{ fromJson(inputs.subdirs) }}
    runs-on: ubuntu-22.04
    needs: [update-version]
    env:
      charts-subdir: "${{ matrix.subdir }}"
      root-dir: ${{ inputs.charts-dir }}
      artifact-dir: "${{ inputs.artifact-dir }}"
      ref: ${{ inputs.root-branch }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}

      - name: Prepare artifacts
        run: |
          cd ${{ env.charts-subdir }}
          helm package .
          cd ../../
          mkdir ${{ env.artifact-dir }}
          mkdir ${{ env.artifact-dir }}/${{ env.charts-subdir }}
          mv ${{ env.root-dir }}/${{ env.charts-subdir }}/*.tgz ./${{ env.artifact-dir }}/${{ env.charts-subdir }}
          ls -al ./${{ env.artifact-dir }}/${{ env.charts-subdir }}
          tree .
        shell: bash
        working-directory: ${{ env.root-dir }}
      
      - name: Upload artifacts with action/upload
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ env.charts-subdir }}
          path: ${{ env.artifact-dir }}/${{ env.charts-subdir }}
          retention-days: 1

  publish-artifacts:
    runs-on: ubuntu-22.04
    needs: [package-new-artifacts]
    env:
      gh-pages: ${{ inputs.gh-pages-branch }}
      root-dir: ${{ inputs.project-root-dir }}
      artifact-dir: "${{ inputs.artifact-dir }}"
      charts-dir: "${{ inputs.artifact-dir }}"

    steps:
      - name: Check out branch containing the artifatcs and the index.yaml file
        uses: actions/checkout@v3
        with:
          ref: ${{ env.gh-pages }}
          
      - name: Download new artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          path: ${{ env.artifact-dir }}
      
      - name: Merge contents if the artifacts already exist or Create new tree if not
        run: |
          for subdir in */; do
            if [ -d "../$subdir" ]; then
              echo "$subdir arleady exists Moving content of $subdir"
              mv "$subdir"/* ../"$subdir"
            else
              echo "$subdir does not exist. Moving the whole directory $subdir"
              mkdir ../"$subdir"
              mv "$subdir"/* ../"$subdir"
            fi
          done
          tree ../
        shell: bash
        working-directory: ${{ env.artifact-dir }}
      
      - name: Remove useless directories
        run: |
          rm -rf ${{ env.artifact-dir }}
          tree .
        shell: bash
        working-directory: ${{ env.root-dir }}

      - name: Generate index.yaml file
        run: |
          helm repo index .
          tree .
          cat index.yaml
        shell: bash
        working-directory: ${{ env.root-dir }}

      - name: Commit and push artifacts and the index.yaml file
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          add-untracked: true
          ref: ${{ env.gh-pages }}
          commit-message: "Commit new artifacts"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}
