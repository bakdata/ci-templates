name: Reusable workflow for packaging and publishing Helm charts having multiple subchart on GitHub pages

on:
  workflow_call:
    inputs:
      ref:
        description: "The ref name to checkout the repository."
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      lint-config-path:
        description: "The path to the lint configuration file (See https://github.com/helm/chart-testing/blob/main/pkg/config/test_config.yaml)."
        required: false
        default: ".github/lint-config.yaml"
        type: string
      helm-version:
        description: "The Helm version."
        required: false
        default: "v3.10.1"
        type: string
      charts-dir:
        description: "The directory containing the Helm chart and `.bumpversion.cfg` file."
        required: true
        default: "."
        type: string
      subdirs:
        description: "List of subdir to consider" # "['subdir1', 'subdir2', 'subdir3']"
        required: true
        type: string
      index-dir:
        description: "Directory to temporaly store the index.yaml files"
        required: false
        default: "indexes"
        type: string
      artifact-dir:
        description: "Directory inside `charts-dir` for preparation of the GitHub pages artifact."
        required: false
        default: "artifact"
        type: string
      project-root-dir:
        description: "Github  dir where the charts dir is located"
        required: false
        default: "."
        type: string
      gh-pages-branch:
        description: "Name of branch containing the artifacts"
        required: true
        default: "gh-pages"
        type: string

    secrets:
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

jobs:
  # helm-lint:
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Lint Helm chart
  #       uses: bakdata/ci-templates/actions/helm-lint@v1.0.0
  #       with:
  #         lint-config-path: "${{ inputs.lint-config-path }}"

  package-new-artifacts:
    strategy:
      matrix:
        subdir: ${{ fromJson(inputs.subdirs) }}
    runs-on: ubuntu-22.04
    #needs: [helm-lint]
    env:
      charts-subdir: "${{ matrix.subdir }}"
      root-dir: ${{ inputs.charts-dir }}
      artifact-dir: "${{ inputs.artifact-dir }}"
      index-dir: "${{ inputs.index-dir }}"
      ref: ${{ inputs.ref }}
      skip-download: ${{ inputs.skip-download }}
      page-url: ${{ inputs.page-url }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}
      - name: Prepare artifacts
        run: |
          cd ${{ env.charts-subdir }}
          helm package .
          cd ..
          mkdir ${{ env.artifact-dir }}
          mkdir ${{ env.artifact-dir }}/${{ env.charts-subdir }}
          mv ${{ env.charts-subdir }}/*.tgz ${{ env.artifact-dir }}/${{ env.charts-subdir }}
        shell: bash
        working-directory: ${{ env.root-dir }}
      
      - name: Upload artifacts with action/upload
        uses: actions/upload-artifact@v3.1.1
        with:
          path: ${{ env.root-dir }}/${{ env.artifact-dir }}
          retention-days: 1

  publish-artifacts:
    runs-on: ubuntu-22.04
    needs: [package-new-artifacts]
    env:
      gh-pages: ${{ inputs.gh-pages-branch }}
      root-dir: ${{ inputs.charts-dir }}
      artifact-dir: "${{ inputs.artifact-dir }}"
#      charts-subdirs: ${{ fromJson(inputs.subdirs) }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.gh-pages }}
      
      - name: Create an array of subdirs
        id: list
        run: echo "::set-output name=subdirs_list::$(jq 'split(",")' -Rc <(echo '${{ inputs.subdirs }}'))"
      
      - name: Test array
        run: |
          for i in "${{ inputs.subdirs }}"
          do
            echo $i
            echo "---""
          done
        shell: bash
      
      - name: Check if repository is empty
        id: checkrepo
        run: |
          if [ "$(ls -A ../)" ]; then
            echo "empty=false" >> $GITHUB_OUTPUT
          else
              echo "empty=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Download all artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          path: ${{ env.root-dir }}/${{ env.artifact-dir }}
      
      - name: Merge contents if the artifacts already exist 
        if: ${{ steps.checkrepo.outputs.empty }} == 'false' }}
        run: |
          tree .
          for i in "${${{ env.charts-subdirs }}[@]}"
          do
            mv $i/* ../$i
          done
          tree .
        shell: bash
        working-directory: ${{ env.root-dir }}/${{ env.artifact-dir }}
      
      - name: Create new tree for the first run 
        if: ${{  steps.checkrepo.outputs.empty }} == 'true' }}
        run: |
          tree .
          for i in "${${{ env.charts-subdirs }}[@]}"
          do
            echo "$i"
            mv ./$i ../
          done
          tree .
        shell: bash
        working-directory: ${{ env.root-dir }}/${{ env.artifact-dir }}
      
      - name: Remove useless directories
        run: |
          rm -rf ${{ env.artifact-dir }}
          tree .
        shell: bash
        working-directory: ${{ env.root-dir }}
      
      - name: Generate index.yaml file
        run: |
          helm repo index .
          tree .
          cat index.yaml
        shell: bash
        working-directory: ${{ env.root-dir }}

      - name: Commit and push Chart.yaml & .bumpversion.cfg file
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          ref: ${{ env.gh-pages }}
          commit-message: "Commit new artifacts"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}

