name: Reusable workflow for packaging and publishing Helm charts having multiple subchart on GitHub pages

on:
  workflow_call:
    inputs:
      page-url:
        description: "URL to the GitHub pages website of the repository."
        required: true
        type: string
      release-type:
        description: "Scope of the release (major, minor or patch)."
        required: true
        type: string
      ref:
        description: "The ref name to checkout the repository."
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      lint-config-path:
        description: "The path to the lint configuration file (See https://github.com/helm/chart-testing/blob/main/pkg/config/test_config.yaml)."
        required: false
        default: ".github/lint-config.yaml"
        type: string
      helm-version:
        description: "The Helm version."
        required: false
        default: "v3.10.1"
        type: string
      charts-dir:
        description: "The directory containing the Helm chart and `.bumpversion.cfg` file."
        required: true
        default: "."
        type: string
      skip-download:
        description: "Skip downloading index.yaml and previous Chart versions from GitHub pages. (To be used during setup of this workflow)"
        required: false
        default: "false"
        type: string
      subdirs:
        description: "List of subdir to consider" # "['subdir1', 'subdir2', 'subdir3']"
        required: true
        type: string
      index-dir:
        description: "Directory to temporaly store the index.yaml files"
        required: false
        default: "indexes"
        type: string
      artifact-dir:
        description: "Directory inside `charts-dir` for preparation of the GitHub pages artifact."
        required: false
        default: "artifact"
        type: string
      project-root-dir:
        description: "Github  dir where the charts dir is located"
        required: false
        default: "."
        type: string

    secrets:
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

    # Map the workflow outputs to job outputs
    outputs:
      release-tag:
        description: "The release tag."
        value: ${{ jobs.helm-release.outputs.release-tag }}
      old-tag:
        description: "The old tag."
        value: ${{ jobs.helm-release.outputs.old-tag }}

jobs:
  # helm-lint:
  #   runs-on: ubuntu-22.04

  #   steps:
  #     - name: Lint Helm chart
  #       uses: bakdata/ci-templates/actions/helm-lint@v1.0.0
  #       with:
  #         lint-config-path: "${{ inputs.lint-config-path }}"

  package-new-artifacts:
    strategy:
      matrix:
        subdir: ${{ fromJson(inputs.subdirs) }}
    runs-on: ubuntu-22.04
    #needs: [helm-lint]
    env:
      charts-subdir: "${{ matrix.subdir }}"
      root-dir: ${{ inputs.charts-dir }}
      artifact-dir: "${{ inputs.artifact-dir }}"
      index-dir: "${{ inputs.index-dir }}"
      ref: ${{ inputs.ref }}
      skip-download: ${{ inputs.skip-download }}
      page-url: ${{ inputs.page-url }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}
      - name: Prepare artifacts
        run: |
          cd ${{ env.charts-subdir }}
          helm package .
          cd ..
          mkdir ${{ env.artifact-dir }}
          mv ${{ env.charts-subdir }}/*.tgz ${{ env.artifact-dir }}
        shell: bash
        working-directory: ${{ env.root-dir }}
      
      - name: Upload artifacts with action/upload
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ env.charts-subdir }}
          path: ${{ env.root-dir }}/${{ env.artifact-dir }}
          retention-days: 1

  publish-artifacts:
    runs-on: ubuntu-22.04
    needs: [package-new-artifacts]
    env:
      root-dir: ${{ inputs.charts-dir }}
      artifact-dir: "${{ inputs.artifact-dir }}"
      ref: ${{ inputs.ref }}
      skip-download: ${{ inputs.skip-download }}
      page-url: ${{ inputs.page-url }}
      index-url: ${{ inputs.page-url }}/index.yaml
    # Map the job outputs to step outputs
    outputs:
      release-tag: ${{ steps.release-tag.outputs.release-tag }}
      old-tag: ${{ steps.release-tag.outputs.old-tag }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}
      - name: Download all artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          path: ${{ env.root-dir }}/${{ env.artifact-dir }}
      
      - name: Generateindex.yaml for new packages
        run: |
          tree .
          helm repo index .
          tree .
          cat index.yaml
        shell: bash
        working-directory: ${{ env.root-dir }}/${{ env.artifact-dir }}

      - name: Verify if there are older versions
        run: |
          if [[ "$(curl -s -o /dev/null -w "%{http_code}" ${{ inputs.index-url }})" == "200" ]];
          then 
          mv index.yaml index_new.yaml
          wget ${{ inputs.index-url }}; 
          mv index.yaml index_old.yaml
          echo "INDEX_EXISTS=true" >> $GITHUB_ENV
          else
          echo "INDEX_EXISTS=false" >> $GITHUB_ENV
          fi
        shell: bash
        working-directory: ${{ env.root-dir }}/${{ env.artifact-dir }}
      
      - name: Merge all indexes into one index.yaml within the artifact root dir
        if: ${{ env.INDEX_EXISTS == 'true' }}
        uses: mikefarah/yq@v4.30.5
        with:
          cmd: yq ea '. as $item ireduce ({}; . * $item )' index_new.yaml index_old.yaml > ${{ env.artifact-dir }}/index.yaml

      - name: After merge remove all useless indexes
        if: ${{ env.INDEX_EXISTS == 'true' }}
        run: |
          rm index_old.yaml
          rm index_new.yaml
        shell: bash
        working-directory: ${{ env.root-dir }}/${{ env.artifact-dir }}
    
      - name: Create artifact # for both cases
        uses: actions/upload-pages-artifact@v1.0.5
        with:
          path: ${{ env.root-dir }}/${{ env.artifact-dir }}

  publish-gh-pages:
    runs-on: ubuntu-22.04
    needs: publish-artifacts
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
      contents: read
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

