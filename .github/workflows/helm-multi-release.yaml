name: Helm Multi Release
# Reusable workflow for packaging and publishing Helm charts having multiple subcharts on GitHub pages

on:
  workflow_call:
    inputs:
      charts-path:
        description: "The directory containing the Helm chart and `.bumpversion.cfg` file."
        required: true
        type: string
      subdirs:
        description: "List of subdir to consider" # "['subdir1', 'subdir2', 'subdir3']"
        required: true
        type: string
      artifact-dir:
        description: "Directory next to `charts-path` for preparation of the GitHub pages artifact."
        required: false
        default: "artifacts"
        type: string
      gh-pages-branch:
        description: "Name of branch containing the artifacts"
        required: false
        default: "gh-pages"
        type: string
      root-branch:
        description: "The main branch."
        default: "main"
        required: false
        type: string
      helm-version:
        description: "The Helm version."
        required: false
        default: "v3.10.1"
        type: string
      lint-config-path:
        description: "The path to the lint configuration file (See https://github.com/helm/chart-testing/blob/main/pkg/config/test_config.yaml)."
        required: false
        default: ".github/lint-config.yaml"
        type: string

    secrets:
      github-username:
        description: "The GitHub username for committing the changes."
        required: true
      github-email:
        description: "The GitHub email for committing the changes."
        required: true
      github-token:
        description: "The GitHub token for committing the changes."
        required: true

jobs:
  helm-lint:
    runs-on: ubuntu-22.04

    steps:
      - name: Lint Helm chart
        uses: bakdata/ci-templates/actions/helm-lint@v1.10.0
        with:
          lint-config-path: "${{ inputs.lint-config-path }}"

  update-version:
    runs-on: ubuntu-22.04
    outputs:
      output1: ${{ steps.step2.outputs.singlechart }}
    needs: [helm-lint]
    env:
      ref: ${{ github.event.repository.default_branch }}
      release-tag: ${{ github.ref_name }}
      CHARTS: ${{ inputs.subdirs }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}

      - name: Use the tag to update Chart.yaml files
        id: step2
        run: |
          echo "singlechart=false" >> "$GITHUB_OUTPUT"
          charts="${{ env.CHARTS }}"
          charts_without_brackets="${charts:1:-1}"
          charts_without_brackets_and_quotation="${charts_without_brackets//\'/}"
          
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y
          for subdir in ${charts_without_brackets_and_quotation//,/ }; do
            yq e -i '.version = "${{ env.release-tag }}"' "./$subdir/Chart.yaml"
            if [ "$subdir" = "." ]; then
              echo "singlechart=true" >> "$GITHUB_OUTPUT"
            fi
          done
        shell: bash
        working-directory: ${{ inputs.charts-path }}

      - name: Commit and push updated charts
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          add-untracked: true
          ref: ${{ env.ref }}
          commit-message: "Update Chart versions"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}

  package-new-artifacts:
    strategy:
      matrix:
        subdir: ${{ fromJson(inputs.subdirs) }}
    runs-on: ubuntu-22.04
    needs: [update-version]
    env:
      charts-subdir: "${{ matrix.subdir }}"
      ref: ${{ github.event.repository.default_branch }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.ref }}

      - name: Prepare artifacts
        run: |
          mkdir -p ../${{ inputs.artifact-dir }}/${{ env.charts-subdir }}
          helm package ${{ env.charts-subdir }} -d ../${{ inputs.artifact-dir }}/${{ env.charts-subdir }}
        shell: bash
        working-directory: ${{ inputs.charts-path }}
      
      - name: Upload artifacts with action/upload as multi chart
        if: ${{needs.update-version.outputs.output1 == 'false' }}
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ env.charts-subdir }}
          path: ${{ inputs.artifact-dir }}/${{ env.charts-subdir }}
          retention-days: 1
      
      - name: Upload artifacts with action/upload as single chart
        if: ${{needs.update-version.outputs.output1 == 'true' }}
        uses: actions/upload-artifact@v3.1.1
        with:
          path: ${{ inputs.artifact-dir }}
          retention-days: 1

  publish-artifacts:
    runs-on: ubuntu-22.04
    needs: [package-new-artifacts,update-version]
    env:
      artifact-dir: "${{ inputs.artifact-dir }}"
      charts-path: "${{ inputs.artifact-dir }}"

    steps:
      - name: Check out branch containing the artifatcs and the index.yaml file
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.gh-pages-branch }}

      - name: Download new artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          path: ${{ inputs.artifact-dir }}
      
      - name: Merge contents if the artifacts already exist or Create new tree if not
        if: ${{needs.update-version.outputs.output1 == 'false' }}
        run: |
          for subdir in */; do
            if [ -d "../$subdir" ]; then
              mv "$subdir"/* ../"$subdir"
            else
              mkdir ../"$subdir"
              mv "$subdir"/* ../"$subdir"
            fi
          done
          cd ..
          rm -rf ${{ inputs.artifact-dir }}
        shell: bash
        working-directory: ${{ inputs.artifact-dir }}

      - name: Move artifacts to root dir in case  of a single  chart
        if: ${{needs.update-version.outputs.output1 == 'true' }}
        run: |
          for tgzfile in *; do
            mv "$tgzfile" ../../
          done
          cd ../..
          rm -rf ${{ inputs.artifact-dir }}
        shell: bash
        working-directory: "${{ inputs.artifact-dir }}/artifact"

      - name: Generate index.yaml file
        run: |         
          helm repo index .
        shell: bash
        working-directory: "."

      - name: Commit and push artifacts and the index.yaml file
        uses: bakdata/ci-templates/actions/commit-and-push@v1.6.0
        with:
          add-untracked: true
          ref: ${{ inputs.gh-pages-branch }}
          commit-message: "Commit new artifacts"
          github-username: ${{ secrets.github-username }}
          github-email: ${{ secrets.github-email }}
          github-token: ${{ secrets.github-token }}
